server:
  port: 8080
  servlet:
    context-path: /order-service

spring:
  application:
    name: order-service
  profiles:
    active: local

  # ================================
  # KAFKA CONFIGURATION
  # ================================
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 5
      buffer-memory: 33554432
      properties:
        enable.idempotence: true
    consumer:
      group-id: order-service-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: false
      properties:
        spring.json.trusted.packages: "com.ecommerce.platform"
        spring.json.value.default.type: "com.ecommerce.platform.shared.domain.DomainEvent"
        spring.json.type.mapping: |
          ORDER_CREATED:com.ecommerce.platform.shared.domain.OrderCreatedEvent,
          SUBSCRIPTION_ACTIVATED:com.ecommerce.platform.shared.domain.SubscriptionActivatedEvent,
          PAYMENT_PROCESSED:com.ecommerce.platform.shared.domain.PaymentProcessedEvent,
          PAYMENT_FAILED:com.ecommerce.platform.shared.domain.PaymentFailedEvent

# ================================
# CUSTOM APPLICATION PROPERTIES
# ================================
app:
  order:
    max-items-per-order: 50
    default-currency: BRL
    processing-timeout-minutes: 30
  integration:
    payment-service:
      url: http://localhost:8082
      timeout: 5000ms
    inventory-service:
      url: http://localhost:8083
      timeout: 3000ms
  kafka:
    topics:
      order-events: order.events
      payment-events: payment.events
      inventory-events: inventory.events